<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.jsrk.backup</groupId>
	<artifactId>backupServer</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>backupServer Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<!-- Properties to store important values -->
	<properties>
		<!-- Sets the default project default encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<org.springframework.version>4.2.0.RELEASE</org.springframework.version>
		<servlet.version>3.1.0</servlet.version>
		<jstl.version>1.2</jstl.version>
		<ejb.version>3.2</ejb.version>
		<apache.tiles.version>2.2.1</apache.tiles.version>
		<!-- Using older versions of hibernate to avoid conflict between libraries -->
		<hibernate.version>4.2.0.Final</hibernate.version>
		<aspectj.version>1.8.6</aspectj.version>
		<apache.dbcp2.version>2.1.1</apache.dbcp2.version>
		<mysql.connector.version>5.1.36</mysql.connector.version>
		<log4j.version>1.2.17</log4j.version>
		<junit.version>4.12</junit.version>
		<maven.war.version>2.6</maven.war.version>
		<maven.compiler.version>3.3</maven.compiler.version>
		<java.version>1.7</java.version>
	</properties>

	<dependencies>

		<!-- Spring MVC for Servlet Environments -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring Object-to-Relation-Mapping (ORM) integration with Hibernate -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Define the contracts between a servlet class and the runtime environment 
			provided for an instance of such a class by a conforming servlet container -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.version}</version>
		</dependency>

		<!-- JSP Standard Tag Library -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>

		<!-- Contains ejb -->
		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>javax.ejb-api</artifactId>
			<version>${ejb.version}</version>
		</dependency>

		<!-- Tiles Core Library, including basic implementation of the APIs -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-core</artifactId>
			<version>${apache.tiles.version}</version>
		</dependency>

		<!-- Classes and tag libraries to use Tiles in a JSP environment -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>${apache.tiles.version}</version>
		</dependency>

		<!-- The core ORM functionality as provided by Hibernate -->
		<!-- If this jar is used by a request and the hibernate properties are 
			not yet set, this checks for hibernate.properties in the resources folder 
			of the project -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
			<scope>compile</scope>
		</dependency>

		<!-- Hibernate validator to use validations -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<!-- The AspectJ weaver introduces advices to java classes -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>

		<!-- Apache Commons DBCP software implements Database Connection Pooling -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${apache.dbcp2.version}</version>
		</dependency>

		<!-- MySQL JDBC Type 4 driver -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.connector.version}</version>
		</dependency>

		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<!-- Unit testing framework for Java -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<finalName>backupServer</finalName>

		<plugins>

			<!-- Builds a Web Application Archive (WAR) file from the project output 
				and its dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven.war.version}</version>
			</plugin>

			<!-- The Compiler Plugin is used to compile the sources of your project -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

		</plugins>

	</build>

</project>
